name: 'Check Main Branch Manual PR'

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

jobs:
  check-pr-to-main:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if PR is created by GitHub Actions
        id: check_actor
        run: |
          ACTOR="${{ github.actor }}"
          echo "PR created by: $ACTOR"
          
          # Check if the PR was created by github-actions bot
          if [[ "$ACTOR" == "github-actions[bot]" || "$ACTOR" == "github-actions" ]]; then
            echo "is_github_actions=true" >> $GITHUB_OUTPUT
          else
            echo "is_github_actions=false" >> $GITHUB_OUTPUT
          fi

      - name: Block manual PR to main branch
        if: steps.check_actor.outputs.is_github_actions != 'true'
        run: |
          echo "❌ ERROR: Manual pull requests to the main branch are not allowed!"
          echo ""
          echo "All merges to the main branch must be done through the GitHub Actions workflow."
          echo ""
          echo "## How to merge to main:"
          echo ""
          echo "1. Go to the GitHub Actions page:"
          echo "   https://github.com/${{ github.repository }}/actions/workflows/set-version-and-make-release-draft.yml"
          echo ""
          echo "2. Click 'Run workflow'"
          echo ""
          echo "3. Enter the version number (e.g., 1.0.0 or 1.0.0-beta.1)"
          echo ""
          echo "The workflow will automatically:"
          echo "  - Update version numbers in Unity and Python projects"
          echo "  - Commit changes to develop branch"
          echo "  - Fast-forward merge to main branch"
          echo "  - Create a release draft"
          echo ""
          echo "This ensures:"
          echo "  - Version consistency across projects"
          echo "  - Clean git history with fast-forward merges"
          echo "  - Proper release management"
          exit 1

      - name: Post error comment on PR
        if: steps.check_actor.outputs.is_github_actions != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Check if error comment already exists
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: prNumber
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚫 **ERROR: Manual PR to main branch is not allowed**')
            );
            
            if (!botComment) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: `🚫 **ERROR: Manual PR to main branch is not allowed**

This repository enforces that all merges to the main branch must be done through the automated GitHub Actions workflow.

## Why is this blocked?

1. **Version Consistency**: The automated workflow ensures version numbers are synchronized between Unity and Python projects
2. **Clean Git History**: Fast-forward merges maintain a linear history
3. **Release Management**: Automatic creation of release drafts with proper tagging

## How to properly merge to main:

### Use the automated workflow:

1. Go to [Set Version and Create Release Draft](https://github.com/${owner}/${repo}/actions/workflows/set-version-and-make-release-draft.yml)
2. Click **"Run workflow"**
3. Select the \`develop\` branch
4. Enter the version number (e.g., 1.0.0 or 1.0.0-beta.1)

The workflow will automatically:
- ✅ Update version in Unity package.json
- ✅ Update version in Python pyproject.toml
- ✅ Commit changes to develop branch
- ✅ Fast-forward merge develop into main
- ✅ Create a GitHub release draft

## Next steps:

**Please close this PR** and use the automated workflow instead.

If you have special circumstances that require manual merging, please discuss with the repository maintainers.`
              });
            }
            
            // Mark PR checks as failed
            await github.rest.repos.createCommitStatus({
              owner,
              repo,
              sha: context.payload.pull_request.head.sha,
              state: 'error',
              description: 'Manual PRs to main branch are not allowed',
              context: 'main-branch-protection'
            });

      - name: Add blocking labels
        if: steps.check_actor.outputs.is_github_actions != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            try {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: prNumber,
                labels: ['blocked', 'use-github-actions', 'invalid']
              });
            } catch (error) {
              console.log('Labels might not exist, skipping label addition:', error.message);
            }

      - name: Allow GitHub Actions PRs
        if: steps.check_actor.outputs.is_github_actions == 'true'
        run: |
          echo "✅ This PR was created by GitHub Actions and is allowed."
          echo "Proceeding with the merge to main branch."