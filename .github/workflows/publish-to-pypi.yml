name: Publish to PyPI

on:
  release:
    types: [published, prereleased]
  workflow_dispatch:      # Can also be run manually

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Check that tag and pyproject version match (to prevent mistakes)
      - name: Ensure tag == project.version (PEP 440)
        run: |
          python - <<'PY'
          import os, sys, re
          try:
              import tomllib  # Py3.11+
          except ModuleNotFoundError:
              import tomli as tomllib  # fallback

          ref = os.environ.get("GITHUB_REF_NAME", "")
          tag = ref[1:] if ref.startswith("v") else ref

          with open("STYLY-NetSync-Server/pyproject.toml", "rb") as f:
              proj = tomllib.load(f)
          version = proj["project"]["version"]

          if tag != version:
              print(f"::error::Git tag ({ref}) != project.version ({version})")
              sys.exit(1)
          print(f"Tag and pyproject version match: {version}")
          PY

      - name: Build sdist and wheel
        working-directory: STYLY-NetSync-Server
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Upload built dists
        uses: actions/upload-artifact@v4
        with:
          name: styly-netsync-server-dist
          path: STYLY-NetSync-Server/dist/*

  publish:
    runs-on: ubuntu-latest
    needs: build
    # If you register this Environment name as a Trusted Publisher on the PyPI side, it is safe
    environment:
      name: pypi
      url: https://pypi.org/p/styly-netsync-server
    permissions:
      id-token: write   # â˜… Required for Trusted Publishing
      contents: read

    steps:
      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: styly-netsync-server-dist
          path: dist

      - name: Publish to PyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # verify-metadata: true is default (runs twine check)
          # attestations: true is also default (software signing)
          # verbose: true  # Enable for debugging if necessary
